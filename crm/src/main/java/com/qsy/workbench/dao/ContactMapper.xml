<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qsy.workbench.dao.ContactMapper">
  <resultMap id="BaseResultMap" type="com.qsy.workbench.pojo.Contact">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="fullname" jdbcType="VARCHAR" property="fullname" />
    <result column="appellation" jdbcType="VARCHAR" property="appellation" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mphone" jdbcType="VARCHAR" property="mphone" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="birth" jdbcType="CHAR" property="birth"/>
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="contact_summary" jdbcType="VARCHAR" property="contactSummary" />
    <result column="next_contact_time" jdbcType="CHAR" property="nextContactTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="owner_name" jdbcType="VARCHAR" property="ownerName"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, owner, source, customer_id, fullname, appellation, email, mphone, job, birth,create_by,
    create_time, edit_by, edit_time, description, contact_summary, next_contact_time, 
    address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_contact
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_contact
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.qsy.workbench.pojo.Contact">
    insert into tbl_contact (id, owner, source, 
      customer_id, fullname, appellation, 
      email, mphone, job, 
      create_by, create_time, edit_by, 
      edit_time, description, contact_summary, 
      next_contact_time, address)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{source,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=CHAR}, #{fullname,jdbcType=VARCHAR}, #{appellation,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mphone,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, #{editBy,jdbcType=VARCHAR}, 
      #{editTime,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, #{contactSummary,jdbcType=VARCHAR}, 
      #{nextContactTime,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qsy.workbench.pojo.Contact">
    insert into tbl_contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="fullname != null">
        fullname,
      </if>
      <if test="appellation != null">
        appellation,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mphone != null">
        mphone,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editBy != null">
        edit_by,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="contactSummary != null">
        contact_summary,
      </if>
      <if test="nextContactTime != null">
        next_contact_time,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=CHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="fullname != null">
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="appellation != null">
        #{appellation,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mphone != null">
        #{mphone,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        #{editBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="contactSummary != null">
        #{contactSummary,jdbcType=VARCHAR},
      </if>
      <if test="nextContactTime != null">
        #{nextContactTime,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qsy.workbench.pojo.Contact">
    update tbl_contact
    <set>
      <if test="owner != null">
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="fullname != null">
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="appellation != null">
        appellation = #{appellation,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mphone != null">
        mphone = #{mphone,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="contactSummary != null">
        contact_summary = #{contactSummary,jdbcType=VARCHAR},
      </if>
      <if test="nextContactTime != null">
        next_contact_time = #{nextContactTime,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qsy.workbench.pojo.Contact">
    update tbl_contact
    set owner = #{owner,jdbcType=CHAR},
      source = #{source,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=CHAR},
      fullname = #{fullname,jdbcType=VARCHAR},
      appellation = #{appellation,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mphone = #{mphone,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      contact_summary = #{contactSummary,jdbcType=VARCHAR},
      next_contact_time = #{nextContactTime,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <insert id="insertContact" parameterType="contact">
    insert into tbl_contact (id, owner, source, customer_id, fullname, appellation, email, mphone, job, birth, create_by,
                             create_time, description, contact_summary, next_contact_time, address)
    values (#{id},#{ owner},#{ source},#{ customerId},#{ fullname},#{ appellation},#{ email},#{ mphone},#{ job},#{birth},#{ createBy},
            #{ createTime},#{ description},#{ contactSummary},#{ nextContactTime},#{ address});
  </insert>

  <select id="selectContactForSaveTran" parameterType="string" resultMap="BaseResultMap">
    select id,fullname,email,mphone
    from tbl_contact
    where fullname like '%' #{fullname} '%';
  </select>

  <select id="selectContactByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select cot.id, u1.name as owner,dv1.value as source, cut.name as customer_id, cot.fullname, dv2.value as appellation, cot.email, cot.mphone, cot.job, cot.birth, u2.name as create_by, cot.create_time, u3.name as edit_by, cot.edit_time, cot.description, cot.contact_summary, cot.next_contact_time, cot.address
    from tbl_contact cot
    join tbl_user u1 on cot.owner = u1.id
    join tbl_user u2 on cot.create_by = u2.id
    left join tbl_user u3 on cot.edit_by = u3.id
    left join tbl_dic_value dv1 on cot.source = dv1.id
    left join tbl_dic_value dv2 on cot.appellation = dv2.id
    left join tbl_customer cut on cot.customer_id = cut.id
    <where>
      <if test="owner!=null and owner!=''">
        and u1.name like '%' #{owner} '%'
      </if>
      <if test="fullname!=null and fullname!=''">
        and cot.fullname like '%' #{fullname} '%'
      </if>
      <if test="customerName!=null and customerName!=''">
        and cut.name = #{customerName}
      </if>
      <if test="source!=null and source!=''">
        and cot.source = #{source}
      </if>
      <if test="birth!=null and birth!=''">
        and DATE_FORMAT(cot.birth,'%m %d') between DATE_FORMAT(DATE_SUB(#{birth},INTERVAL 7 DAY),'%m %d') and DATE_FORMAT(#{birth},'%m %d')
      </if>
    </where>
    order by cot.create_time desc
    limit #{beginNo},#{pageSize};
  </select>
  <select id="selectCountOfContactByCondition" parameterType="map" resultType="_int">
    select count(*)
    from tbl_contact cot
    join tbl_user u1 on cot.owner = u1.id
    join tbl_user u2 on cot.create_by = u2.id
    left join tbl_user u3 on cot.edit_by = u3.id
    left join tbl_dic_value dv1 on cot.source = dv1.id
    left join tbl_dic_value dv2 on cot.appellation = dv2.id
    left join tbl_customer cut on cot.customer_id = cut.id
    <where>
      <if test="owner!=null and owner!=''">
        and u1.name like '%' #{owner} '%'
      </if>
      <if test="fullname!=null and fullname!=''">
        and cot.fullname like '%' #{fullname} '%'
      </if>
      <if test="customerName!=null and customerName!=''">
        and cut.name = #{customerName}
      </if>
      <if test="source!=null and source!=''">
        and cot.source = #{source}
      </if>
      <if test="birth!=null and birth!=''">
        and DATE_FORMAT(cot.birth,'%m %d') between DATE_FORMAT(DATE_SUB(#{birth},INTERVAL 7 DAY),'%m %d') and DATE_FORMAT(#{birth},'%m %d')
      </if>
    </where>
  </select>
  <select id="selectContactById" parameterType="string" resultMap="BaseResultMap">
    select cot.birth, cot.id, cot.owner, cot.source, cut.name as customer_id, cot.fullname, cot.appellation, cot.email, cot.mphone, cot.job, cot.description, cot.contact_summary, cot.next_contact_time, cot.address
    from tbl_contact cot
    left join tbl_customer cut on cot.customer_id = cut.id
    where cot.id = #{id}
  </select>
  <update id="updateContactById" parameterType="contact">
    update tbl_contact
    set owner = #{owner},
        source = #{source},
        customer_id = #{customerId},
        fullname = #{fullname},
        appellation = #{appellation},
        email = #{email},
        mphone = #{mphone},
        job = #{job},
        birth = #{birth},
        edit_by = #{editBy},
        edit_time = #{editTime},
        description = #{description},
        contact_summary = #{contactSummary},
        next_contact_time = #{nextContactTime},
        address = #{address}

    where id = #{id};
  </update>
  <delete id="deleteContactByIds" parameterType="string">
    delete
    from tbl_contact
    where id in
    <foreach collection="array" item="id" open=" (" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectContactByIdForDetail" parameterType="string" resultMap="BaseResultMap">
    select cot.id, u1.name as owner_name,cot.owner,dv1.value as source, cut.name as customer_id, cot.fullname, dv2.value as appellation, cot.email, cot.mphone, cot.job, cot.birth, u2.name as create_by, cot.create_time, u3.name as edit_by, cot.edit_time, cot.description, cot.contact_summary, cot.next_contact_time, cot.address
    from tbl_contact cot
           join tbl_user u1 on cot.owner = u1.id
           join tbl_user u2 on cot.create_by = u2.id
           left join tbl_user u3 on cot.edit_by = u3.id
           left join tbl_dic_value dv1 on cot.source = dv1.id
           left join tbl_dic_value dv2 on cot.appellation = dv2.id
           left join tbl_customer cut on cot.customer_id = cut.id
    where cot.id = #{id};
  </select>
  <select id="selectContactByCustomerId" parameterType="string" resultMap="BaseResultMap">
    select id,fullname,email,mphone
    from tbl_contact
    where customer_id = #{customerId};
  </select>
  <delete id="deleteContactByCustomerId" parameterType="string">
    delete
    from tbl_contact
    where customer_id in
    <foreach collection="array" item="customerId" separator="," open=" (" close=")">
      #{customerId}
    </foreach>
  </delete>
  <select id="selectCountOfContactBySource" resultType="funnelVO">
    SELECT COUNT(*) AS VALUE,COALESCE(dv1.value,'未知') AS NAME
    FROM tbl_contact c
           LEFT JOIN tbl_dic_value dv1 ON c.source = dv1.id
    GROUP BY c.source;
  </select>
  <select id="selectCountOfContactByOwnerAndCreate" resultType="lBVO">
    select u1.name as name ,count(*) as value
    from tbl_contact c
           join tbl_user u1 on c.owner =u1.id
    where month(create_time)=month(CURDATE())
    group by c.owner
    order by count(*)
    limit 0,10;
  </select>
</mapper>